[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "ciastore"
version = "0.0.0"
authors = [
  { name="CoolCat467" },
]
description = "Caught In the Act Store Server"
readme = {file = "README.md", content-type = "text/markdown"}
license = {file = "LICENSE"}
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
    "Operating System :: OS Independent",
    "Typing :: Typed",
]
keywords = ["server"]
dependencies = [
    "hypercorn[trio]~=0.15.0",
    "python-dotenv~=1.0.0",
    "quart~=0.19.3",
    "quart-auth~=0.9.0",
    "quart-trio~=0.11.0",
    "trio~=0.24.0",
    "Werkzeug~=3.0.1"
]

[project.urls]
"Homepage" = "https://github.com/ShreyAgarwal310/CIAstore"
"Source" = "https://github.com/ShreyAgarwal310/CIAstore"
"Bug Tracker" = "https://github.com/ShreyAgarwal310/CIAstore/issues"

[tool.setuptools.package-data]
ciastore = ["py.typed", "templates/*", "static/*"]

[tool.pytest.ini_options]
addopts = "--cov-report term-missing --cov=ciastore"
testpaths = [
    "tests",
]

[tool.mypy]
mypy_path = "src"
check_untyped_defs = true
disallow_any_generics = true
disallow_untyped_calls = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
no_implicit_reexport = true
show_column_numbers = true
show_error_codes = true
show_traceback = true
strict = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.ruff.isort]
combine-as-imports = true

[tool.pycln]
all = true
disable_all_dunder_policy = true

[tool.black]
line-length = 120  # Will not raise errors if too big, see below.
target-version = ['py310']

[tool.ruff]
line-length = 120  # I don't care about line length a whole lot, just that it's not TOO big.
fix = true

include = ["*.py", "*.pyi", "**/pyproject.toml"]

select = ['A', 'B', 'C4', 'COM', 'D', 'E', 'EXE', 'F', 'FA', 'I', 'N', 'PIE', 'PT', 'PYI', 'Q', 'RET', 'RUF', 'S', 'SIM', 'SLOT', 'UP', 'YTT']
ignore = [
    "D211",  # conflicts with docstrings
    "D213",  # conflicts with docstrings
##    "E203",  # conflicts with black
    "E501",  # conflicts with black
    "S101",  # use of assert for tests and type narrowing
##    "E402",  # module level import not at top of file
    "D203",  # One blank line before class
    "D401",  # Imparative mood docstrings
    "D417",  # Warning that argument descriptions don't exist when they do
]

fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
unfixable = []#"D203"]

[tool.ruff.per-file-ignores]
"tests/*" = [
    "D103",  # no docstrings
]

[tool.tox]
legacy_tox_ini = """
    [tox]
    envlist = py310, py311, py312, pytest, mypy
    isolated_build = false

    [gh-actions]
    python =
        3.10: py310, pytest
        3.11: py311, pytest
        3.12: py312, pytest, mypy

    [testenv]
    setenv =
        PYTHONPATH = {toxinidir}

    [testenv:pytest]
    deps =
        pytest
        pytest-cov
        pytest-trio
    commands = pytest --basetemp={envtmpdir}

    [testenv:mypy]
    deps =
        mypy
    commands = mypy src
"""
