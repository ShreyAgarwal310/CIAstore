[build-system]
requires = ["setuptools>=42.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ciastore"
version = "0.0.0"
authors = [
  { name="CoolCat467" },
]
description = "Caught In the Act Store Server"
readme = {file = "README.md", content-type = "text/markdown"}
license = {file = "LICENSE"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Operating System :: OS Independent",
    "Typing :: Typed",
]
keywords = ["server"]
dependencies = [
    "hypercorn[trio]~=0.14.3",
    "python-dotenv~=1.0.0",
    "quart~=0.18.4",
    "quart-auth~=0.9.0",
    "quart-trio~=0.10.0",
    "trio~=0.22.0",
    "Werkzeug~=2.3.3"
]

[project.optional-dependencies]
dev = [
    "mypy~=1.4.1",              # must match .pre-commit-config.yaml
    "pre-commit",
    "pre-commit-hooks~=4.4.0",  # must match .pre-commit-config.yaml
    "tox~=4.9.0",
]
format = [
    "black~=23.7.0",            # must match .pre-commit-config.yaml
    "isort~=5.12.0",            # must match .pre-commit-config.yaml
    "pycln~=2.2.1",             # must match .pre-commit-config.yaml
]
tests = [
    "flake8~=6.1.0",            # must match .pre-commit-config.yaml
    "flake8-bugbear~=23.7.10",   # must match .pre-commit-config.yaml
    "flake8-noqa~=1.3.1",       # must match .pre-commit-config.yaml
    "pytest~=7.4.0",
    "pytest-cov~=4.1.0",
    "pytest-trio~=0.8.0",
]

[project.urls]
"Homepage" = "https://github.com/ShreyAgarwal310/CIAstore"
"Source" = "https://github.com/ShreyAgarwal310/CIAstore"
"Bug Tracker" = "https://github.com/ShreyAgarwal310/CIAstore/issues"

[tool.setuptools.package-data]
ciastore = ["py.typed", "templates/*", "static/*"]

[tool.pytest.ini_options]
addopts = "--cov-report term-missing --cov=ciastore"
testpaths = [
    "tests",
]

[tool.mypy]
mypy_path = "src"
check_untyped_defs = true
disallow_any_generics = true
disallow_untyped_calls = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
no_implicit_reexport = true
show_column_numbers = true
show_error_codes = true
show_traceback = true
strict = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.black]
line-length = 79
target-version = ['py311']

[tool.isort]
profile = "black"
combine_as_imports = true
line_length = 79
skip = [".git", ".github", ".venv"]

[tool.pycln]
all = true
disable_all_dunder_policy = true

[tool.tox]
legacy_tox_ini = """
    [tox]
    minversion = 3.11.0
    envlist = py311, pycln, black, isort, pytest, flake8, mypy
    isolated_build = false

    [gh-actions]
    python =
        3.11: py311, pytest, flake8, mypy

    [testenv]
    basepython = python3.11
    setenv =
        PYTHONPATH = {toxinidir}

    [testenv:pytest]
    deps =
        pytest
        pytest-cov
        pytest-trio
    commands = pytest --basetemp={envtmpdir}

    [testenv:flake8]
    deps =
        flake8
        flake8-bugbear
        flake8-noqa
    commands = flake8 src tests

    [testenv:mypy]
    deps =
        mypy
        trio-typing[mypy]
    commands = mypy src

    [format]
    basepython = python3.11
    setenv =
        PYTHONPATH = {toxinidir}

    [format:pycln]
    deps =
        pycln
    commands = pycln src tests

    [format:black]
    deps =
        black
    commands = black src tests

    [format:isort]
    deps =
        isort
    commands = isort src tests
"""
